// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrganizationEmployeeBaseWebApp.DataAccessLayer;

#nullable disable

namespace OrganizationEmployeeBaseWebApp.DataAccessLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231212222010_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OrganizationEmployeeBaseWebApp.DataLayer.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportSeries")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("employees", (string)null);

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            DateOfBirth = new DateOnly(2003, 7, 8),
                            FirstName = "Ксения",
                            LastName = "Мельникова",
                            OrganizationId = 1,
                            PassportNumber = "123456",
                            PassportSeries = "12345678",
                            Patronymic = "Васильевна"
                        },
                        new
                        {
                            EmployeeId = 2,
                            DateOfBirth = new DateOnly(1962, 12, 11),
                            FirstName = "Максим",
                            LastName = "Пименов",
                            OrganizationId = 2,
                            PassportNumber = "164352",
                            PassportSeries = "42156478",
                            Patronymic = "Евгеньевич"
                        },
                        new
                        {
                            EmployeeId = 3,
                            DateOfBirth = new DateOnly(1994, 8, 26),
                            FirstName = "Елизавета",
                            LastName = "Миронова",
                            OrganizationId = 2,
                            PassportNumber = "956431",
                            PassportSeries = "86541235",
                            Patronymic = "Елизавета"
                        },
                        new
                        {
                            EmployeeId = 4,
                            DateOfBirth = new DateOnly(1986, 3, 2),
                            FirstName = "Валерий",
                            LastName = "Васильев",
                            OrganizationId = 2,
                            PassportNumber = "154356",
                            PassportSeries = "84569721",
                            Patronymic = "Валентинович"
                        },
                        new
                        {
                            EmployeeId = 5,
                            DateOfBirth = new DateOnly(1975, 11, 1),
                            FirstName = "София",
                            LastName = "Иванова",
                            OrganizationId = 1,
                            PassportNumber = "864352",
                            PassportSeries = "13945125",
                            Patronymic = "Ивановна"
                        },
                        new
                        {
                            EmployeeId = 6,
                            DateOfBirth = new DateOnly(1986, 1, 30),
                            FirstName = "Игорь",
                            LastName = "Девин",
                            OrganizationId = 2,
                            PassportNumber = "124553",
                            PassportSeries = "63541235",
                            Patronymic = "Владимирович"
                        });
                });

            modelBuilder.Entity("OrganizationEmployeeBaseWebApp.DataLayer.Entities.Organization", b =>
                {
                    b.Property<int>("OrganizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrganizationId"), 1L, 1);

                    b.Property<string>("ActualAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("INN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrganizationId");

                    b.ToTable("organizations", (string)null);

                    b.HasData(
                        new
                        {
                            OrganizationId = 1,
                            ActualAddress = "Фактический адрес 1",
                            INN = "1234567890",
                            LegalAddress = "Юридический адрес 1",
                            Name = "Организация 1"
                        },
                        new
                        {
                            OrganizationId = 2,
                            ActualAddress = "Фактический адрес 2",
                            INN = "0987654321",
                            LegalAddress = "Юридический адрес 2",
                            Name = "Организация 2"
                        },
                        new
                        {
                            OrganizationId = 3,
                            ActualAddress = "Фактический адрес 3",
                            INN = "1234554321",
                            LegalAddress = "Юридический адрес 3",
                            Name = "Организация 3"
                        });
                });

            modelBuilder.Entity("OrganizationEmployeeBaseWebApp.DataLayer.Entities.Employee", b =>
                {
                    b.HasOne("OrganizationEmployeeBaseWebApp.DataLayer.Entities.Organization", "Organization")
                        .WithMany("Employees")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("OrganizationEmployeeBaseWebApp.DataLayer.Entities.Organization", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
